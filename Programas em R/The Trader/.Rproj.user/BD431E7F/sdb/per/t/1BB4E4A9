{
    "contents" : "NeuralClass = R6Class(\"NeuralClass\",\n                       \n                       public = list(\n                         \n                         #=================================================#\n                         initialize = function(tabelaEntrada){\n                           \n                           private$tabelaEntrada = tabelaEntrada\n                           private$keys.data = unique(tabelaEntrada$symbol)\n                           private$list.netLearning = length(private$keys.data)\n                           \n                           private$training()\n                         },\n                         #=================================================#\n                         \n                         #=================================================#\n                         use = function(dateTimeInicial, dateTimeFinal, key){\n                           \n                           dateTimeInicial = strptime(dateTimeInicial, \"%Y-%m-%d %H:%M:%S\")\n                           dateTimeFinal = strptime(dateTimeFinal, \"%Y-%m-%d %H:%M:%S\")\n                           \n                           startTime = dateTimeInicial\n                           \n                           dateTimeInicial = as.numeric(dateTimeInicial)\n                           dateTimeFinal = as.numeric(dateTimeFinal)\n                           \n                           intervalo = seq(dateTimeInicial, dateTimeFinal, by = 60)\n                           \n                           net.result = attr(private$list.netLearning,key)\n                           \n                           net.get = compute(net.result, intervalo)$net.result\n                           net.get = round(net.get,digits = 3)\n                           \n                           dateFormatInterval = startTime + 60*(0: (length(intervalo)-1) )\n                           tabelaEsperada = data.table(symbol = key, Bid = net.get[,1], Ask = net.get[,2], \n                                                       queryDateTime = dateFormatInterval, id = \"Sim\")\n                           \n                           tabelaEntrada = private$tabelaEntrada\n                           tabelaEntrada = tabelaEntrada[,c(1,2,3,7), with = F]\n                           tabelaEntrada$id = NULL\n                           tabelaEntrada = unique(tabelaEntrada)\n                           \n                           setkey(tabelaEsperada,symbol)\n                           setkey(tabelaEntrada, symbol)\n                           \n                           tabelaEsperada = merge(tabelaEntrada,tabelaEsperada)\n                           \n                           return(tabelaEsperada)\n                            \n                         }\n                         #=================================================#\n                       ),\n                       \n                       private = list(\n\n                         #=================================================#                         \n                         keys.data = c(),\n                         tabelaEntrada = data.table(),\n                         list.netLearning = 0,\n                         #=================================================#\n                         \n                         #=================================================#\n                         training = function(){\n                           \n                           ids = private$keys.data\n                           tabela = private$tabelaEntrada\n                           \n                           tabela = tabela[,c(1,6,4,5), with = F]\n                           for(id in ids){\n                             \n                             index = which(tabela$symbol == id)\n                             result.key = tabela[index]\n                             result.key$symbol = NULL\n                             \n                             qdt = strptime(result.key$queryDateTime, \"%Y-%m-%d %H:%M:%S\")\n                             result.key$queryDateTime = as.numeric(qdt)\n                             result.key = mapply(as.numeric, result.key)\n                             \n                             net.result = neuralnet(Bid+Ask~queryDateTime,  result.key, hidden=15, threshold=0.001)\n                             \n                             attr(private$list.netLearning, id) = net.result\n                           }\n                           \n                         }\n                         #=================================================#\n                         \n                       )\n)",
    "created" : 1478874833448.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "545492358",
    "id" : "1BB4E4A9",
    "lastKnownWriteTime" : 1478887994,
    "path" : "C:/Users/pedro.farias/Desktop/The Actionist/src/NeuralClass.R",
    "project_path" : "src/NeuralClass.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}