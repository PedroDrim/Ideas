{
    "collab_server" : "",
    "contents" : "#http://shinyapps.stat.ubc.ca/r-graph-catalog/#fig07-21_blood-level-data-multipanel-plot\n#http://www.r-graph-gallery.com/104-plot-lines-with-error-envelopes-ggplot2/\n\nGraphClass = R6Class(\"GraphClass\",\n                     \n                     public = list(\n                       \n                       #=================================================#\n                       getPlot = function(tabela, colname, rangemax, simulated = F){\n                         \n                         if(simulated){\n                           flag = \"simulada\"\n                           index = which(tabela$type == \"simulated\")\n                           tabela = tabela[index]\n                         }else{\n                           flag = \"real\"\n                           index = which(tabela$type == \"observed\")\n                           tabela = tabela[index]\n                         }\n                         \n                         tabela.sort = private$prepareData(tabela, rangemax)       \n                         tabela.sort$symbol = as.factor(tabela.sort$symbol)\n                         \n                         titulo = sprintf(\"Quadro de acoes (%s)\",flag)\n                         \n                         index.name = which(names(tabela.sort) == colname)\n                         names(tabela.sort)[index.name] = \"mark\"\n                         \n                         tabela.sort$mark = as.numeric(tabela.sort$mark)\n                         \n                         dias.min = min(tabela.sort$queryDateTime)\n                         dias.max = max(tabela.sort$queryDateTime)\n                         \n                         dias.min = strsplit(dias.min, split = \" \")[[1]]\n                         dias.max = strsplit(dias.max, split = \" \")[[1]]\n                         \n                         dias.min = dias.min[2]\n                         dias.max = dias.max[2]\n                         \n                         eixo.y = sprintf(\"%s (%s)\",colname ,unique(tabela.sort$Currency) )\n                         eixo.x = sprintf(\"De %s ate %s (min)\", dias.min ,dias.max)\n                         \n                         vetor.qdt = strptime(tabela.sort$queryDateTime, \"%Y-%m-%d %H:%M:%S\")\n                         vetor.qdt = as.numeric(vetor.qdt)\n                         vetor.qdt = (vetor.qdt - min(vetor.qdt) )/60\n                         \n                         tabela.sort$queryDateTime = vetor.qdt\n                         \n                         ggplot(tabela.sort, aes(x=queryDateTime, y=mark, group=symbol)) +\n                           geom_line(aes(colour = symbol)) + \n                           labs(title = titulo, x = eixo.x, y = eixo.y)\n                         \n                       }\n                       #=================================================#\n                     ),\n                     \n                     private = list(\n                       \n                       #=================================================#\n                       prepareData = function(tabela.ini, rangemax){\n                         \n                         keys = unique(tabela.ini$symbol)\n                         \n                         datas.list = lapply(keys, function(key, data, tamanho){\n                           \n                           index = which(data$symbol == key)\n                           data = data[index]\n                           \n                           inicio = 1\n                           tamanho = dim(data)[1]\n                           \n                           if(tamanho > rangemax){\n                             inicio = tamanho - rangemax\n                           }\n                           data = data[inicio:tamanho]\n                           \n                           return(data)\n                         }, tabela.ini, rangemax)\n                         \n                         md = do.call(rbind,datas.list)\n                         return(md)\n                       }\n                       #=================================================#\n                       \n                     )\n)\n",
    "created" : 1479220592933.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4101072957",
    "id" : "E2F1D57C",
    "lastKnownWriteTime" : 1479176330,
    "last_content_update" : 1479176330,
    "path" : "~/Dropbox/The Trader/src/GraphClass.R",
    "project_path" : "src/GraphClass.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}